package com.Ateam.HangaramAPP;

import android.app.Activity;
import android.os.Bundle;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;
 
// 추상클래스 android.database.sqlite.SQLiteOpenHelper 상속
class DBopenhelper extends SQLiteOpenHelper
{
        // 생성자

		private SQLiteDatabase mdb;
		private Context mcontext;
		private DBopenhelper mdbhelper;
		
		private static class DBopenhelper(Context context)
        {
               // 컨텍트스, DB파일, 커스텀커서(표준커서 null), 버전
            super(context, "Setting.db", null, 1);
        }
 
        // DB가 처음 만들어 질때
        public void onCreate(SQLiteDatabase db)
        {
               db.execSQL("CREATE TABLE setting " + "(_id INTEGER PRIMARY KEY AUTOINCREMENT, " + "(tf TEXT);");
        }
    	public DBopenhelper open() throws SQLException{
    		mdbhelper =  new DBopenhelper(mcontext);
            mdb = mdbhelper.getWritableDatabase();
            return this;
           }
    	public long insertd(String tf){
    		ContentValues values= new ContentValues();
    		values.put("tf", tf);
    		return mdb.insert("setting",null,values);
    		
    	}
    	public boolean deleted(long rowId){
            return mdb.delete("setting", "_id="+rowId, null)>0;

        }
    	public Cursor fetchd(){          
            return mdb.query("setting", new String[]{"tf"}, null, null, null, null, null);
        }
    	public boolean updated(long rowId, String tf){
            ContentValues args = new ContentValues();
            args.put("tf", tf);


            return mdb.update("setting", args, "_id=" + rowId, null)> 0;
        }
    	//SQLiteDatabase 자원정리
    	public void Close(){
    		mdb.close();
    	}

        // 이미존재하는 DB를 업그레이드
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
        {
               db.execSQL("DROP TABLE IF EXISTS setting");
               onCreate(db);
        }
        
}
 